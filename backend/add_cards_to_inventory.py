#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ Spider-Man –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import os
import sys
import django
from decimal import Decimal
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/rex/Documents/cards/backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.cards.models import Card, Series
from apps.inventory.models import InventoryItem
from django.contrib.auth.models import User

def add_cards_to_inventory():
    """–î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üï∑Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ Spider-Man –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        username='spiderman_collector',
        defaults={
            'email': 'collector@spiderman.com',
            'first_name': 'Spider-Man',
            'last_name': 'Collector'
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    else:
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    all_cards = Card.objects.all()
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {all_cards.count()}")
    
    added_count = 0
    updated_count = 0
    
    for card in all_cards:
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
            inventory_item = InventoryItem.objects.get(
                owner=user,
                card=card
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
            inventory_item.quantity = random.randint(1, 5)  # –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç 1 –¥–æ 5
            inventory_item.condition = random.choice(['M', 'NM', 'SP', 'MP', 'HP'])
            inventory_item.user_rating = Decimal(str(random.uniform(1.0, 10.0)))
            inventory_item.has_card = True
            inventory_item.save()
            
            updated_count += 1
            
        except InventoryItem.DoesNotExist:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
            InventoryItem.objects.create(
                owner=user,
                card=card,
                quantity=random.randint(1, 5),
                condition=random.choice(['M', 'NM', 'SP', 'MP', 'HP']),
                user_rating=Decimal(str(random.uniform(1.0, 10.0))),
                has_card=True
            )
            
            added_count += 1
        
        if (added_count + updated_count) % 100 == 0:
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {added_count + updated_count} –∫–∞—Ä—Ç–æ—á–µ–∫...")
    
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {added_count}")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {updated_count}")
    print(f"üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {added_count + updated_count}")
    
    return added_count + updated_count

def add_specific_cards_to_inventory(card_numbers):
    """–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"""
    print(f"üï∑Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ {card_numbers} –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User.objects.get(username='spiderman_collector')
    
    added_count = 0
    
    for card_number in card_numbers:
        try:
            # –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ –Ω–æ–º–µ—Ä—É –≤ –ø–µ—Ä–≤–æ–π —Å–µ—Ä–∏–∏
            card = Card.objects.get(series__number=1, number=card_number)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
            try:
                existing_item = InventoryItem.objects.get(owner=user, card=card)
                print(f"‚ÑπÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∞ #{card_number} —É–∂–µ –µ—Å—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
                continue
            except InventoryItem.DoesNotExist:
                pass
            
            # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
            InventoryItem.objects.create(
                owner=user,
                card=card,
                quantity=random.randint(1, 3),
                condition=random.choice(['M', 'NM', 'SP']),
                user_rating=Decimal(str(random.uniform(7.0, 10.0))),
                has_card=True
            )
            
            added_count += 1
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ #{card_number}: {card.title}")
            
        except Card.DoesNotExist:
            print(f"‚ö†Ô∏è –ö–∞—Ä—Ç–æ—á–∫–∞ #{card_number} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {added_count}")
    return added_count

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üï∑Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ Spider-Man –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    total_count = add_cards_to_inventory()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    popular_cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    popular_count = add_specific_cards_to_inventory(popular_cards)
    
    print(f"\nüéâ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {total_count}")
    print(f"üìä –ü–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {popular_count}")
    print(f"üí° –¢–µ–ø–µ—Ä—å –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!")

if __name__ == '__main__':
    main()
