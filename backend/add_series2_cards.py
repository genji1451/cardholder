#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏ Spider-Man (276-550)
"""

import os
import sys
import django
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/rex/Documents/cards/backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from apps.cards.models import Card, Series
from apps.inventory.models import InventoryItem
from django.contrib.auth.models import User

def add_series2_cards():
    """–î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏ Spider-Man (276-550)"""
    print("üï∑Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏ Spider-Man (276-550)...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä—É—é —Å–µ—Ä–∏—é
    series, created = Series.objects.get_or_create(
        number=2,
        defaults={'title': 'Spider-Man Heroes and Villains - Part 2'}
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Ä–∏—è: {series.title}")
    else:
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Ä–∏—é: {series.title}")
    
    # –î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏ (276-550)
    cards_data = {
        # –ì–µ—Ä–æ–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ (276-350)
        276: {"title": "–ß–µ–ª–æ–≤–µ–∫-–ü–∞—É–∫ (–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 52.50},
        277: {"title": "–ñ–µ–ª–µ–∑–Ω—ã–π –ß–µ–ª–æ–≤–µ–∫ (–ú–∞—Ä–∫ 42)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 55.00},
        278: {"title": "–ö–∞–ø–∏—Ç–∞–Ω –ê–º–µ—Ä–∏–∫–∞ (–°—Ç–∏–≤ –†–æ–¥–∂–µ—Ä—Å)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 57.50},
        279: {"title": "–¢–æ—Ä (–û–¥–∏–Ω—Å–æ–Ω)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 60.00},
        280: {"title": "–•–∞–ª–∫ (–ë—Ä—é—Å –ë–∞–Ω–Ω–µ—Ä)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 62.50},
        281: {"title": "–ß–µ—Ä–Ω–∞—è –í–¥–æ–≤–∞ (–ù–∞—Ç–∞—à–∞ –†–æ–º–∞–Ω–æ—Ñ—Ñ)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 65.00},
        282: {"title": "–°–æ–∫–æ–ª–∏–Ω—ã–π –ì–ª–∞–∑ (–ö–ª–∏–Ω—Ç –ë–∞—Ä—Ç–æ–Ω)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 67.50},
        283: {"title": "–î–æ–∫—Ç–æ—Ä –°—Ç—Ä—ç–Ω–¥–∂ (–°—Ç–∏–≤–µ–Ω –°—Ç—Ä—ç–Ω–¥–∂)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 70.00},
        284: {"title": "–°–æ—Ä–≤–∏–≥–æ–ª–æ–≤–∞ (–ú—ç—Ç—Ç –ú–µ—Ä–¥–æ–∫)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 72.50},
        285: {"title": "–î–∂–µ—Å—Å–∏–∫–∞ –î–∂–æ–Ω—Å (–î–∂–µ—Å—Å–∏–∫–∞ –ö—ç–º–ø–±–µ–ª–ª)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 75.00},
        286: {"title": "–õ—é–∫ –ö–µ–π–¥–∂ (–ö–∞—Ä–ª –õ—É–∫–∞—Å)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 77.50},
        287: {"title": "–ñ–µ–ª–µ–∑–Ω—ã–π –ö—É–ª–∞–∫ (–î—ç–Ω–Ω–∏ –†—ç–Ω–¥)", "type": "–ì–µ—Ä–æ–π", "rarity": "o", "price": 80.00},
        288: {"title": "–ß–µ–ª–æ–≤–µ–∫-–ü–∞—É–∫ (–ú–∞–π–ª–∑ –ú–æ—Ä–∞–ª–µ—Å)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 85.00},
        289: {"title": "–ß–µ–ª–æ–≤–µ–∫-–ü–∞—É–∫ (–ì–≤–µ–Ω –°—Ç–µ–π—Å–∏)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 87.50},
        290: {"title": "–ß–µ–ª–æ–≤–µ–∫-–ü–∞—É–∫ (–ë–µ–Ω –†–µ–π–ª–∏)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 90.00},
        291: {"title": "–í–µ–Ω–æ–º (–≠–¥–¥–∏ –ë—Ä–æ–∫)", "type": "–ê–Ω—Ç–∏–≥–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 92.50},
        292: {"title": "–ö–∞—Ä–Ω–∞–∂ (–ö–ª–µ—Ç—É—Å –ö–∞—Å—Å–∞–¥–∏)", "type": "–ó–ª–æ–¥–µ–π", "rarity": "—Å–∫", "price": 95.00},
        293: {"title": "–¢–æ–∫—Å–∏–Ω (–ü–∞—Ç—Ä–∏–∫ –ú–∞–ª–ª–∏–≥–∞–Ω)", "type": "–ê–Ω—Ç–∏–≥–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 97.50},
        294: {"title": "–ê–Ω—Ç–∏-–í–µ–Ω–æ–º (–≠–¥–¥–∏ –ë—Ä–æ–∫)", "type": "–ê–Ω—Ç–∏–≥–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 100.00},
        295: {"title": "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π –°—ë—Ä—Ñ–µ—Ä (–ù–æ—Ä—Ä–∏–Ω –†–∞–¥–¥)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 102.50},
        296: {"title": "–§–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∞—è –ß–µ—Ç–≤–µ—Ä–∫–∞ (–†–∏–¥ –†–∏—á–∞—Ä–¥—Å)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 105.00},
        297: {"title": "–ú–∏—Å—Ç–µ—Ä –§–∞–Ω—Ç–∞—Å—Ç–∏–∫ (–†–∏–¥ –†–∏—á–∞—Ä–¥—Å)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 107.50},
        298: {"title": "–ù–µ–≤–∏–¥–∏–º–∞—è –ñ–µ–Ω—â–∏–Ω–∞ (–°—å—é–∑–∞–Ω –®—Ç–æ—Ä–º)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 110.00},
        299: {"title": "–ß–µ–ª–æ–≤–µ–∫-–§–∞–∫–µ–ª (–î–∂–æ–Ω–Ω–∏ –®—Ç–æ—Ä–º)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 112.50},
        300: {"title": "–°—É—â–µ—Å—Ç–≤–æ (–ë–µ–Ω –ì—Ä–∏–º–º)", "type": "–ì–µ—Ä–æ–π", "rarity": "—Å–∫", "price": 115.00},
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –∫–∞—Ä—Ç–æ—á–µ–∫ (301-400)
    for i in range(301, 401):
        card_type = "–ì–µ—Ä–æ–π" if i <= 350 else "–ó–ª–æ–¥–µ–π" if i <= 380 else "–ê–Ω—Ç–∏–≥–µ—Ä–æ–π"
        rarity = "o" if i <= 320 else "—Å–∫" if i <= 370 else "—É–∫"
        price = 60.00 + (i * 2.50)
        
        cards_data[i] = {
            "title": f"–ö–∞—Ä—Ç–æ—á–∫–∞ #{i}",
            "type": card_type,
            "rarity": rarity,
            "price": price
        }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ (401-550)
    for i in range(401, 551):
        card_type = "–ë–æ–µ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞" if i <= 450 else "–°—É–ø–µ—Ä–º–µ—Å—Ç–∞" if i <= 500 else "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –æ–±–ª–æ–∂–∫–∞"
        rarity = "—Å–∫" if i <= 450 else "—É–∫" if i <= 500 else "—É–∫"
        price = 70.00 + (i * 3.00)
        
        cards_data[i] = {
            "title": f"–ö–∞—Ä—Ç–æ—á–∫–∞ #{i}",
            "type": card_type,
            "rarity": rarity,
            "price": price
        }
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    created_count = 0
    updated_count = 0
    
    for card_number, data in cards_data.items():
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            card = Card.objects.get(series=series, number=card_number)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            card.title = data["title"]
            card.rarity = data["rarity"]
            card.base_price_rub = Decimal(str(data["price"]))
            card.notes = f"{data['type']}: {data['title']}\n–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: https://www.laststicker.ru/i/cards/106/{card_number}.jpg"
            card.save()
            updated_count += 1
            
        except Card.DoesNotExist:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            card = Card.objects.create(
                series=series,
                number=card_number,
                title=data["title"],
                rarity=data["rarity"],
                base_price_rub=Decimal(str(data["price"])),
                notes=f"{data['type']}: {data['title']}\n–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: https://www.laststicker.ru/i/cards/106/{card_number}.jpg"
            )
            created_count += 1
        
        if (created_count + updated_count) % 50 == 0:
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {created_count + updated_count} –∫–∞—Ä—Ç–æ—á–µ–∫...")
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {created_count}")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {updated_count}")
    print(f"üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {created_count + updated_count}")
    
    return created_count + updated_count

def add_series2_to_inventory():
    """–î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"""
    print("üï∑Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User.objects.get(username='spiderman_collector')
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ç–æ—Ä—É—é —Å–µ—Ä–∏—é
    series = Series.objects.get(number=2)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏
    cards = Card.objects.filter(series=series)
    
    added_count = 0
    
    for card in cards:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
            existing_item = InventoryItem.objects.get(owner=user, card=card)
            print(f"‚ÑπÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∞ #{card.number} —É–∂–µ –µ—Å—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
            continue
        except InventoryItem.DoesNotExist:
            pass
        
        # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        InventoryItem.objects.create(
            owner=user,
            card=card,
            quantity=1,
            condition='M',
            user_rating=Decimal('8.5'),
            has_card=True
        )
        
        added_count += 1
        
        if added_count % 50 == 0:
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å...")
    
    print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å: {added_count} –∫–∞—Ä—Ç–æ—á–µ–∫")
    return added_count

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üï∑Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–∏–∏ Spider-Man (276-550)")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    cards_count = add_series2_cards()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    inventory_count = add_series2_to_inventory()
    
    print(f"\nüéâ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –ö–∞—Ä—Ç–æ—á–µ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {cards_count}")
    print(f"üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {inventory_count}")
    print(f"üåê –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: https://www.laststicker.ru/i/cards/106/[–Ω–æ–º–µ—Ä].jpg")

if __name__ == '__main__':
    main()
