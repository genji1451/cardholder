#!/usr/bin/env python3
"""
Django –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ Spider-Man
"""

from django.core.management.base import BaseCommand
from decimal import Decimal
from apps.cards.models import Card, Series


class Command(BaseCommand):
    help = '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ Spider-Man'

    def handle(self, *args, **options):
        self.stdout.write('üï∑Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ Spider-Man...')
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        series, created = Series.objects.get_or_create(
            number=1,
            defaults={
                'title': 'Spider-Man Collection',
                'description': '–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ß–µ–ª–æ–≤–µ–∫–∞-–ü–∞—É–∫–∞'
            }
        )
        
        if created:
            self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Ä–∏—è: {series.title}')
        else:
            self.stdout.write(f'üìã –°–µ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {series.title}')
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_cards = [
            {
                'number': 1,
                'title': '–ß–µ–ª–æ–≤–µ–∫-–ü–∞—É–∫',
                'type': '–ì–µ—Ä–æ–π',
                'rarity': 'o',
                'base_price_rub': Decimal('52.50'),
                'description': '–û—Å–Ω–æ–≤–Ω–æ–π –≥–µ—Ä–æ–π –∫–æ–º–∏–∫—Å–æ–≤ Marvel'
            },
            {
                'number': 2,
                'title': '–ñ–µ–ª–µ–∑–Ω—ã–π –ß–µ–ª–æ–≤–µ–∫',
                'type': '–ì–µ—Ä–æ–π',
                'rarity': 'o',
                'base_price_rub': Decimal('55.00'),
                'description': '–ì–µ–Ω–∏–π, –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä, —Ñ–∏–ª–∞–Ω—Ç—Ä–æ–ø'
            },
            {
                'number': 3,
                'title': '–ö–∞–ø–∏—Ç–∞–Ω –ê–º–µ—Ä–∏–∫–∞',
                'type': '–ì–µ—Ä–æ–π',
                'rarity': 'o',
                'base_price_rub': Decimal('57.50'),
                'description': '–°–∏–º–≤–æ–ª —Å–≤–æ–±–æ–¥—ã –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏'
            },
            {
                'number': 4,
                'title': '–í–µ–Ω–æ–º',
                'type': '–ê–Ω—Ç–∏–≥–µ—Ä–æ–π',
                'rarity': '—Å–∫',
                'base_price_rub': Decimal('92.50'),
                'description': '–°–∏–º–±–∏–æ—Ç –∏ –±—ã–≤—à–∏–π —Ö–æ—Å—Ç –≠–¥–¥–∏ –ë—Ä–æ–∫'
            },
            {
                'number': 5,
                'title': '–ó–µ–ª–µ–Ω—ã–π –ì–æ–±–ª–∏–Ω',
                'type': '–ó–ª–æ–¥–µ–π',
                'rarity': '—Ä',
                'base_price_rub': Decimal('85.00'),
                'description': '–ì–ª–∞–≤–Ω—ã–π –≤—Ä–∞–≥ –ß–µ–ª–æ–≤–µ–∫–∞-–ü–∞—É–∫–∞'
            }
        ]
        
        created_count = 0
        for card_data in test_cards:
            card, created = Card.objects.get_or_create(
                number=card_data['number'],
                series=series,
                defaults=card_data
            )
            
            if created:
                created_count += 1
                self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞: {card.title}')
            else:
                self.stdout.write(f'üìã –ö–∞—Ä—Ç–æ—á–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {card.title}')
        
        total_cards = Card.objects.count()
        self.stdout.write(
            self.style.SUCCESS(
                f'üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {created_count}, '
                f'–≤—Å–µ–≥–æ –≤ –±–∞–∑–µ: {total_cards}'
            )
        )
