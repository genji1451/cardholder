#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞ Telegram –±–æ—Ç–∞
"""

import requests
import os
from django.conf import settings

def setup_bot_domain():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ –¥–ª—è Telegram –±–æ—Ç–∞"""
    bot_token = settings.TELEGRAM_BOT_TOKEN
    
    print(f"üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ –¥–ª—è Telegram –±–æ—Ç–∞...")
    
    # –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º localhost
    # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
    domain = "localhost:5173"  # Frontend –¥–æ–º–µ–Ω
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ–º–µ–Ω –¥–ª—è –±–æ—Ç–∞
    url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    
    # –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∫–ª—é—á–∞–µ–º webhook (–∏—Å–ø–æ–ª—å–∑—É–µ–º polling)
    webhook_url = ""  # –ü—É—Å—Ç–æ–π URL –æ—Ç–∫–ª—é—á–∞–µ—Ç webhook
    
    data = {
        "url": webhook_url,
        "allowed_updates": ["message", "callback_query"]
    }
    
    try:
        response = requests.post(url, json=data, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print(f"‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print(f"   Webhook URL: {result.get('result', {}).get('url', '–û—Ç–∫–ª—é—á–µ–Ω')}")
                print(f"   Pending updates: {result.get('result', {}).get('pending_update_count', 0)}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {result.get('description')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def get_bot_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    bot_token = settings.TELEGRAM_BOT_TOKEN
    
    try:
        url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                webhook_info = result.get('result', {})
                print(f"\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
                print(f"   URL: {webhook_info.get('url', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')}")
                print(f"   Pending updates: {webhook_info.get('pending_update_count', 0)}")
                print(f"   Last error: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
                print(f"   Last error date: {webhook_info.get('last_error_date', '–ù–µ—Ç')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.get('description')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")

def setup_bot_commands():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    bot_token = settings.TELEGRAM_BOT_TOKEN
    
    commands = [
        {"command": "start", "description": "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"},
        {"command": "help", "description": "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"},
        {"command": "auth", "description": "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"},
        {"command": "status", "description": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏"}
    ]
    
    try:
        url = f"https://api.telegram.org/bot{bot_token}/setMyCommands"
        data = {"commands": commands}
        
        response = requests.post(url, json=data, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
                for cmd in commands:
                    print(f"   /{cmd['command']} - {cmd['description']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥: {result.get('description')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥: {e}")

if __name__ == "__main__":
    import django
    import sys
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
    sys.path.append('/Users/rex/Documents/cards/backend')
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
    django.setup()
    
    print(f"ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...")
    setup_bot_domain()
    get_bot_info()
    setup_bot_commands()
    
    print(f"\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print(f"   1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @cardloginbot")
    print(f"   2. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã")
    print(f"   3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:5173/auth")
    print(f"   4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'Login with Telegram'")
    print(f"   5. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ Telegram")
