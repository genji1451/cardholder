import { useState, useRef, useEffect } from 'react';
import './Card3DTestPage.css';

interface Card3DTestPageProps {}

const Card3DTestPage = ({}: Card3DTestPageProps) => {
  const [isFlipped, setIsFlipped] = useState(false);
  const [rotation, setRotation] = useState({ x: 0, y: 0 });
  const cardRef = useRef<HTMLDivElement>(null);

  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (!cardRef.current || isFlipped) return;

    const rect = cardRef.current.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;

    const centerX = rect.width / 2;
    const centerY = rect.height / 2;

    const rotateX = ((y - centerY) / centerY) * 15; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–∫–ª–æ–Ω 15 –≥—Ä–∞–¥—É—Å–æ–≤
    const rotateY = ((centerX - x) / centerX) * 15;

    setRotation({ x: rotateX, y: rotateY });
  };

  const handleMouseLeave = () => {
    if (!isFlipped) {
      setRotation({ x: 0, y: 0 });
    }
  };

  const handleCardClick = () => {
    setIsFlipped(!isFlipped);
  };

  return (
    <div className="card3d-test-container">
      <div className="card3d-test-header">
        <h1>üé¥ 3D –ö–∞—Ä—Ç–æ—á–∫–∞ - –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º</h1>
        <p>–ù–∞–≤–µ–¥–∏—Ç–µ –º—ã—à—å –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å 3D —ç—Ñ—Ñ–µ–∫—Ç</p>
        <p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å</p>
      </div>

      <div className="card3d-test-wrapper">
        <div
          ref={cardRef}
          className={`card3d-test-card ${isFlipped ? 'flipped' : ''}`}
          onMouseMove={handleMouseMove}
          onMouseLeave={handleMouseLeave}
          onClick={handleCardClick}
          style={{
            transform: `perspective(1000px) rotateX(${isFlipped ? 0 : rotation.x}deg) rotateY(${isFlipped ? 0 : rotation.y}deg) ${
              isFlipped ? 'rotateY(180deg)' : ''
            }`,
          }}
        >
          <div className="card3d-test-face card3d-test-front">
            <div className="card3d-test-image-wrapper">
              <img 
                src="/images/spiderman/001.png" 
                alt="Card Front"
                className="card3d-test-image"
              />
            </div>
            <div className="card3d-test-info">
              <h2>–ö–∞—Ä—Ç–æ—á–Ω—ã–π –∫–∞—Ä—Ç–µ–ª—å #001</h2>
              <p>–ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞ –º–µ–º–Ω–æ–π —Å–µ—Ä–∏–∏</p>
              <div className="card3d-test-price">300‚ÇΩ</div>
              <div className="card3d-test-hint">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å üëÜ</div>
            </div>
          </div>

          <div className="card3d-test-face card3d-test-back">
            <div className="card3d-test-back-content">
              <h2>üï∏Ô∏è Spider-Man Cards</h2>
              <div className="card3d-test-back-info">
                <div className="card3d-test-back-section">
                  <strong>–°–µ—Ä–∏—è:</strong> –ú–µ–º–Ω–∞—è
                </div>
                <div className="card3d-test-back-section">
                  <strong>–ù–æ–º–µ—Ä:</strong> 001
                </div>
                <div className="card3d-test-back-section">
                  <strong>–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞:</strong> 2024
                </div>
                <div className="card3d-test-back-stats">
                  <div className="stat-item">
                    <span className="stat-label">–†–µ–¥–∫–æ—Å—Ç—å</span>
                    <span className="stat-value">‚≠ê‚≠ê‚≠ê</span>
                  </div>
                  <div className="stat-item">
                    <span className="stat-label">–¢–∏—Ä–∞–∂</span>
                    <span className="stat-value">1 —à—Ç</span>
                  </div>
                </div>
              </div>
              <div className="card3d-test-back-qr">
                <div className="qr-placeholder">üì± QR CODE</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="card3d-test-instructions">
        <h3>üéÆ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
        <ul>
          <li>‚ú® –ù–∞–≤–µ–¥–∏—Ç–µ –º—ã—à—å –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É - –æ–Ω–∞ –±—É–¥–µ—Ç –Ω–∞–∫–ª–æ–Ω—è—Ç—å—Å—è</li>
          <li>üîÑ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É - –æ–Ω–∞ –ø–µ—Ä–µ–≤–µ—Ä–Ω–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–æ–π</li>
          <li>üé® –ö–ª–∏–∫–Ω–∏—Ç–µ –µ—â–µ —Ä–∞–∑ - –∫–∞—Ä—Ç–æ—á–∫–∞ –≤–µ—Ä–Ω–µ—Ç—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ</li>
          <li>‚ö° –≠—Ñ—Ñ–µ–∫—Ç 3D —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—Ü–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã</li>
        </ul>
      </div>

      <div className="card3d-test-controls">
        <button onClick={() => setIsFlipped(!isFlipped)} className="test-button">
          {isFlipped ? 'üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –ª–∏—Ü–µ–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É' : 'üîÑ –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É'}
        </button>
        <button onClick={() => setRotation({ x: 0, y: 0 })} className="test-button">
          üéØ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞–∫–ª–æ–Ω
        </button>
      </div>
    </div>
  );
};

export default Card3DTestPage;

