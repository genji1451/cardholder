import { useState } from 'react';
import { Link } from 'react-router-dom';
import { useCart } from '../contexts/CartContext';
import Footer from '../components/Footer';
import './ShopPage.css';

interface Product {
  id: number;
  title: string;
  description: string;
  price: number;
  category: 'card' | 'art';
  rarity?: 'common' | 'rare' | 'ultra';
  image: string;
  available: boolean;
  featured?: boolean;
}

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
const mockProducts: Product[] = [
  // –ö–∞—Ä—Ç–æ—á–∫–∏
  {
    id: 1,
    title: "Spider-Man Classic",
    description: "–†–µ–¥–∫–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –ß–µ–ª–æ–≤–µ–∫–∞-–ü–∞—É–∫–∞ –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º –∫–æ—Å—Ç—é–º–µ. –°–æ—Å—Ç–æ—è–Ω–∏–µ: –æ—Ç–ª–∏—á–Ω–æ–µ.",
    price: 2500,
    category: 'card',
    rarity: 'ultra',
    image: '/images/spiderman/card_1_1.svg',
    available: true,
    featured: true,
  },
  {
    id: 2,
    title: "Green Goblin",
    description: "–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–ª–æ–¥–µ—è –ó–µ–ª–µ–Ω–æ–≥–æ –ì–æ–±–ª–∏–Ω–∞. –õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–µ—Ä–∏—è.",
    price: 1800,
    category: 'card',
    rarity: 'rare',
    image: '/images/spiderman/card_1_2.svg',
    available: true,
  },
  {
    id: 3,
    title: "Venom Symbiote",
    description: "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –í–µ–Ω–æ–º–∞. –†–µ–¥–∫–æ—Å—Ç—å: —É–ª—å—Ç—Ä–∞.",
    price: 3200,
    category: 'card',
    rarity: 'ultra',
    image: '/images/spiderman/card_1_3.svg',
    available: true,
    featured: true,
  },
  {
    id: 4,
    title: "Mary Jane Watson",
    description: "–ö–∞—Ä—Ç–æ—á–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ MJ. –û–±—ã—á–Ω–∞—è —Ä–µ–¥–∫–æ—Å—Ç—å.",
    price: 800,
    category: 'card',
    rarity: 'common',
    image: '/images/spiderman/card_2_1.svg',
    available: true,
  },
  // –ö–∞—Ä—Ç–∏–Ω—ã
  {
    id: 5,
    title: "Spider-Verse Artwork",
    description: "–ê–≤—Ç–æ—Ä—Å–∫–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ '–í—Å–µ–ª–µ–Ω–Ω–∞—è –ü–∞—É–∫–æ–≤'. –•–æ–ª—Å—Ç, –∞–∫—Ä–∏–ª. 50x70 —Å–º.",
    price: 12000,
    category: 'art',
    image: '/images/spiderman/card_3_1.svg',
    available: true,
    featured: true,
  },
  {
    id: 6,
    title: "Web Slinger Portrait",
    description: "–ü–æ—Ä—Ç—Ä–µ—Ç –ü–∞—É—Ç–∏–Ω–Ω–æ–≥–æ –≥–µ—Ä–æ—è. –¶–∏—Ñ—Ä–æ–≤–∞—è –ø–µ—á–∞—Ç—å –Ω–∞ —Ö–æ–ª—Å—Ç–µ. 40x60 —Å–º.",
    price: 8500,
    category: 'art',
    image: '/images/spiderman/card_3_2.svg',
    available: true,
  },
  {
    id: 7,
    title: "NYC Skyline with Spider-Man",
    description: "–ü–∞–Ω–æ—Ä–∞–º–∞ –ù—å—é-–ô–æ—Ä–∫–∞ —Å —Å–∏–ª—É—ç—Ç–æ–º –ß–µ–ª–æ–≤–µ–∫–∞-–ü–∞—É–∫–∞. 60x90 —Å–º.",
    price: 15000,
    category: 'art',
    image: '/images/spiderman/card_3_3.svg',
    available: false,
  },
];

const ShopPage = () => {
  const { addToCart, getTotalItems } = useCart();
  const [selectedCategory, setSelectedCategory] = useState<'all' | 'card' | 'art'>('all');
  const [selectedRarity, setSelectedRarity] = useState<'all' | 'common' | 'rare' | 'ultra'>('all');

  const filteredProducts = mockProducts.filter(product => {
    const categoryMatch = selectedCategory === 'all' || product.category === selectedCategory;
    const rarityMatch = selectedRarity === 'all' || product.rarity === selectedRarity;
    return categoryMatch && rarityMatch;
  });

  const featuredProducts = mockProducts.filter(p => p.featured);

  const getRarityLabel = (rarity?: string) => {
    switch (rarity) {
      case 'common': return 'üü¢ –û–±—ã—á–Ω–∞—è';
      case 'rare': return 'üü° –†–µ–¥–∫–∞—è';
      case 'ultra': return 'üî¥ –£–ª—å—Ç—Ä–∞';
      default: return '';
    }
  };

  const handleAddToCart = (product: Product) => {
    if (!product.available) return;
    addToCart(product);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = 'cart-notification';
    notification.textContent = `‚úì "${product.title}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`;
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.classList.add('show');
    }, 10);
    
    setTimeout(() => {
      notification.classList.remove('show');
      setTimeout(() => notification.remove(), 300);
    }, 2000);
  };

  return (
    <div className="shop-page">
      {/* Simple Navigation */}
      <nav className="shop-nav">
        <Link to="/" className="shop-nav-logo">
          üï∑Ô∏è Portfolio Cards
        </Link>
        <div className="shop-nav-links">
          <Link to="/cart" className="shop-nav-link cart-link">
            üõí –ö–æ—Ä–∑–∏–Ω–∞
            {getTotalItems() > 0 && (
              <span className="cart-badge">{getTotalItems()}</span>
            )}
          </Link>
          <Link to="/" className="shop-nav-link">üè† –ì–ª–∞–≤–Ω–∞—è</Link>
          <Link to="/auth" className="shop-nav-link">üöÄ –í–æ–π—Ç–∏</Link>
        </div>
      </nav>

      {/* Hero Section */}
      <div className="shop-hero">
        <div className="hero-content">
          <div className="shop-logo">üõçÔ∏è</div>
          <h1>–ú–∞–≥–∞–∑–∏–Ω –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–∞</h1>
          <p>–†–µ–¥–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã Spider-Man</p>
        </div>
        <div className="hero-spider-web"></div>
      </div>

      {/* Featured Products */}
      {featuredProducts.length > 0 && (
        <section className="featured-section">
          <h2>‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ</h2>
          <div className="featured-grid">
            {featuredProducts.map(product => (
              <div key={product.id} className="featured-card">
                <div className="featured-badge">FEATURED</div>
                <div className="product-image">
                  <img src={product.image} alt={product.title} />
                  {!product.available && <div className="sold-overlay">–ü–†–û–î–ê–ù–û</div>}
                </div>
                <div className="product-info">
                  <h3>{product.title}</h3>
                  <div className="product-price">‚ÇΩ{product.price.toLocaleString()}</div>
                  {product.rarity && (
                    <div className="product-rarity">{getRarityLabel(product.rarity)}</div>
                  )}
                </div>
              </div>
            ))}
          </div>
        </section>
      )}

      {/* Filters */}
      <section className="filters-section">
        <div className="filter-group">
          <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
          <div className="filter-buttons">
            <button
              className={selectedCategory === 'all' ? 'active' : ''}
              onClick={() => setSelectedCategory('all')}
            >
              üåê –í—Å–µ
            </button>
            <button
              className={selectedCategory === 'card' ? 'active' : ''}
              onClick={() => setSelectedCategory('card')}
            >
              üé¥ –ö–∞—Ä—Ç–æ—á–∫–∏
            </button>
            <button
              className={selectedCategory === 'art' ? 'active' : ''}
              onClick={() => setSelectedCategory('art')}
            >
              üé® –ö–∞—Ä—Ç–∏–Ω—ã
            </button>
          </div>
        </div>

        {selectedCategory === 'card' && (
          <div className="filter-group">
            <label>–†–µ–¥–∫–æ—Å—Ç—å:</label>
            <div className="filter-buttons">
              <button
                className={selectedRarity === 'all' ? 'active' : ''}
                onClick={() => setSelectedRarity('all')}
              >
                –í—Å–µ
              </button>
              <button
                className={selectedRarity === 'common' ? 'active' : ''}
                onClick={() => setSelectedRarity('common')}
              >
                üü¢ –û–±—ã—á–Ω–∞—è
              </button>
              <button
                className={selectedRarity === 'rare' ? 'active' : ''}
                onClick={() => setSelectedRarity('rare')}
              >
                üü° –†–µ–¥–∫–∞—è
              </button>
              <button
                className={selectedRarity === 'ultra' ? 'active' : ''}
                onClick={() => setSelectedRarity('ultra')}
              >
                üî¥ –£–ª—å—Ç—Ä–∞
              </button>
            </div>
          </div>
        )}
      </section>

      {/* Products Grid */}
      <section className="products-section">
        <div className="products-header">
          <h2>
            {selectedCategory === 'all' && 'üåê –í—Å–µ —Ç–æ–≤–∞—Ä—ã'}
            {selectedCategory === 'card' && 'üé¥ –ö–∞—Ä—Ç–æ—á–∫–∏'}
            {selectedCategory === 'art' && 'üé® –ö–∞—Ä—Ç–∏–Ω—ã'}
          </h2>
          <div className="products-count">
            –ù–∞–π–¥–µ–Ω–æ: {filteredProducts.length}
          </div>
        </div>

        {filteredProducts.length === 0 ? (
          <div className="no-products">
            <div className="no-products-icon">üîç</div>
            <h3>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</p>
          </div>
        ) : (
          <div className="products-grid">
            {filteredProducts.map(product => (
              <div key={product.id} className="product-card">
                <div className="product-image">
                  <img src={product.image} alt={product.title} />
                  {!product.available && <div className="sold-overlay">–ü–†–û–î–ê–ù–û</div>}
                  {product.category === 'card' && product.rarity && (
                    <div className={`rarity-badge ${product.rarity}`}>
                      {getRarityLabel(product.rarity)}
                    </div>
                  )}
                </div>
                
                <div className="product-content">
                  <h3 className="product-title">{product.title}</h3>
                  <p className="product-description">{product.description}</p>
                  
                  <div className="product-footer">
                    <div className="product-price">‚ÇΩ{product.price.toLocaleString()}</div>
                    <button
                      className="buy-button"
                      onClick={() => handleAddToCart(product)}
                      disabled={!product.available}
                    >
                      {product.available ? 'üõí –í –∫–æ—Ä–∑–∏–Ω—É' : '‚ùå –ü—Ä–æ–¥–∞–Ω–æ'}
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </section>

      {/* Contact Section */}
      <section className="contact-section">
        <div className="contact-card">
          <h2>üí¨ –°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π</h2>
          <p>
            –•–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫—É –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω—É? –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?<br />
            –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ Telegram!
          </p>
          <a 
            href="https://t.me/your_username" 
            target="_blank" 
            rel="noopener noreferrer"
            className="telegram-button"
          >
            ‚úàÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram
          </a>
          <div className="payment-info">
            <p className="payment-note">
              üí≥ –ü—Ä–∏–Ω–∏–º–∞—é: –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É, –°–ë–ü, OZON Pay
            </p>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default ShopPage;

